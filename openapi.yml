openapi: 3.0.0
info:
  title: API de Avales
  version: 0.1.0
  description: API para manejar documentos de avales.
servers:
  - url: https://avales-web.vercel.app/ # Cambia esto por la URL base de tu API
    description: Servidor local
paths:
  /api/auth/login:
    post:
      summary: Iniciar sesión
      description: |
        Recibe un email y un password, verifica las credenciales y devuelve un JSON Web Token (JWT) si son válidas.
        - Si el usuario no existe, devuelve un error 404.
        - Si la contraseña es incorrecta, devuelve un error 401.
        - Si hay un error interno del servidor, devuelve un error 500.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: usuario@ejemplo.com
                  description: El email del usuario.
                password:
                  type: string
                  format: password
                  example: contraseña123
                  description: La contraseña del usuario.
              required:
                - email
                - password
      responses:
        "200":
          description: Inicio de sesión exitoso. Devuelve un JWT.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                    description: Token JWT para autenticar al usuario.
        "401":
          description: Contraseña incorrecta.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Contraseña incorrecta
                    description: Mensaje de error indicando que la contraseña es incorrecta.
        "404":
          description: Usuario no encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Usuario no encontrado
                    description: Mensaje de error indicando que el usuario no existe.
        "500":
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Error interno del servidor
                    description: Mensaje de error genérico para errores del servidor.
  /api/usuarios:
    get:
      summary: Obtener la lista de usuarios paginada
      description: Retorna una lista de usuarios con paginación de 10 por página, ordenados por apellido ascendente.
      parameters:
        - name: page
          in: query
          description: Número de la página a obtener (por defecto 1).
          required: false
          schema:
            type: integer
            default: 1
      responses:
        "200":
          description: Lista de usuarios paginada y ordenada.
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    description: Página actual.
                  totalPages:
                    type: integer
                    description: Número total de páginas.
                  totalUsuarios:
                    type: integer
                    description: Número total de usuarios en la base de datos.
                  usuarios:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: ID único del usuario.
                        email:
                          type: string
                          format: email
                          description: Correo electrónico del usuario.
                        nombre:
                          type: string
                          description: Nombre del usuario.
                        apellido:
                          type: string
                          description: Apellido del usuario.
                        cedula:
                          type: string
                          description: Número de cédula del usuario.
                        categoria_id:
                          type: integer
                          description: ID de la categoría del usuario.
                        disciplina_id:
                          type: integer
                          description: ID de la disciplina del usuario.
                        created_at:
                          type: string
                          format: date-time
                          description: Fecha de creación del usuario.
                        updated_at:
                          type: string
                          format: date-time
                          description: Fecha de última actualización del usuario.
        "500":
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Mensaje de error.
